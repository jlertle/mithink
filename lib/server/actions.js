// Generated by CoffeeScript 1.9.0
var debug, errorHandler;

debug = require('debug')('mithink:actions');

errorHandler = require('./error-handler');

exports.load = function(params) {
  if (params == null) {
    params = {};
  }
  debug(this.socket.id + " loading " + this.model._name + " table with params: " + (JSON.stringify(params)));
  return this.model.filter(params).then((function(_this) {
    return function(data) {
      return _this.socket.emit("load", data);
    };
  })(this));
};

exports.update = function(data) {
  debug(this.socket.id + " updating id: " + data.id + " in table " + this.model._name);
  return this.model.save(data, {
    conflict: "update"
  })["catch"](errorHandler.bind(this, 400, data));
};

exports.destroy = function(data) {
  return this.model.get(data.id).then((function(_this) {
    return function(instance) {
      return instance["delete"]()["catch"](errorHandler.bind(_this, 400, data));
    };
  })(this))["catch"](errorHandler.bind(this, 400, data));
};

exports.create = function(data) {
  var instance;
  instance = new this.model(data);
  return instance.save(data)["catch"](errorHandler.bind(this, 400, data));
};

exports.sync = function(data) {
  debug(this.socket.id + " syncing id: " + data.id + " in table " + this.model._name);
  return this.model.get(data.id).then(this.socket.emit.bind(this.socket, 'sync'))["catch"](errorHandler.bind(this, 400, data));
};

// Generated by CoffeeScript 1.9.0
var Access_Control, debug, errorHandler, log, utils,
  __slice = [].slice;

utils = require('../utils');

debug = require('debug')("mithink:security");

log = require('debug')('mithink:actions');

errorHandler = require('./error-handler');

Access_Control = function(Bus) {
  Bus.__access_control__ = {};
  Bus.guard = function(opts) {
    var action, check, _results;
    _results = [];
    for (action in opts) {
      check = opts[action];
      _results.push(Bus.__access_control__[utils.namespace(this.model._name, action)] = check);
    }
    return _results;
  };
  Bus.checkpoint = function(action) {
    return Bus.__access_control__[utils.namespace(this.model._name, this.action)];
  };
  return Bus.__protect__ = function(action) {
    var ctx;
    ctx = this;
    return function() {
      var args, checkpoint, msg;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      checkpoint = Bus.checkpoint.call(ctx);
      if (checkpoint && !checkpoint(this.socket)) {
        msg = "unauthorized attempt to perform " + ctx.action + " on " + ctx.model._name + " table";
        debug(msg);
        return errorHandler.call(ctx, 401, args[0], {
          message: msg
        });
      }
      log(ctx.socket.id + " performing " + (ctx.action.toUpperCase()) + " on " + (ctx.model._name.toUpperCase()) + " -- params: " + (JSON.stringify(args)));
      return action.apply(ctx, args);
    };
  };
};

module.exports = Access_Control;

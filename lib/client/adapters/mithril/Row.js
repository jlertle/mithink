// Generated by CoffeeScript 1.9.0
var Mithril_Row, m,
  __slice = [].slice;

m = require('mithril');

module.exports = Mithril_Row = (function() {
  Mithril_Row.create = function(attrs, table) {
    return new this(attrs, table);
  };

  function Mithril_Row(attrs, _at_table) {
    this.table = _at_table;
    if (this.defaults) {
      this.set(this.defaults);
    }
    this.set(attrs);
  }

  Mithril_Row.prototype.set = function() {
    var args, attr, attrs, v;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (!this.attributes) {
      this.attributes = {};
    }
    if (args.length === 2) {
      attrs = {};
      attrs[args[0]] = args[1];
    } else {
      attrs = args[0];
    }
    for (attr in attrs) {
      v = attrs[attr];
      if (this.has(attr)) {
        this.attributes[attr](v);
      } else {
        this.attributes[attr] = m.prop(v);
      }
    }
    return this;
  };

  Mithril_Row.prototype.has = function(attr) {
    if (this.attributes[attr]) {
      return true;
    } else {
      return false;
    }
  };

  Mithril_Row.prototype.get = function(attr) {
    if (!this.has(attr)) {
      return null;
    }
    return this.attributes[attr]();
  };

  Mithril_Row.prototype.toJSON = function() {
    var attr, j, prop, _ref;
    j = {};
    _ref = this.attributes;
    for (attr in _ref) {
      prop = _ref[attr];
      j[attr] = this.get(attr);
    }
    return j;
  };

  return Mithril_Row;

})();
